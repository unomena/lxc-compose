# Flask Application with Redis
# Multi-container setup using library services

version: '1.0'

containers:
  sample-flask-datastore:
    template: alpine-3.19
    
    # Use pre-configured Redis from library
    includes:
      - redis
    
    # Configure Redis if needed
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
    
    # Redis library service already provides:
    # - Redis package installation
    # - Exposed port 6379
    # - Service setup and startup
    # - Basic configuration

  sample-flask-app:
    template: alpine-3.19
    
    # Include Python3 with all build tools
    includes:
      - python3
    # Optional: include nginx for production serving
    #   - nginx
    
    depends_on:
      - sample-flask-datastore
    
    mounts:
      - .:/app
    
    exposed_ports:
      - 5000    # Flask development server
    
    logs:
      - flask:/var/log/flask/flask.log
      - flask-error:/var/log/flask/flask_err.log
    
    tests:
      internal:
        - health:/app/tests/internal_tests.sh
      external:
        - health:/app/tests/external_tests.sh
      port_forwarding:
        - iptables:/app/tests/port_forwarding_tests.sh
    
    packages:
      # Only packages not provided by python3 or supervisor includes
      - redis   # For redis-cli
      - curl    # For testing
    
    services:
      flask:
        command: /app/venv/bin/python /app/app.py
        directory: /app
        autostart: true
        autorestart: true
        stdout_logfile: /var/log/flask/flask.log
        stderr_logfile: /var/log/flask/flask_err.log
        environment: FLASK_ENV=development,REDIS_HOST=sample-flask-datastore
        startsecs: 10
        stopwaitsecs: 30
    
    post_install:
      - name: "Setup Flask directories"
        command: |
          mkdir -p /var/log/flask
          mkdir -p /app/static /app/templates
      
      - name: "Setup Python environment"
        command: |
          cd /app
          python3 -m venv venv
          ./venv/bin/pip install --upgrade pip setuptools wheel
          ./venv/bin/pip install -r requirements.txt
      
      - name: "Test Redis connection"
        command: |
          # Wait for Redis to be ready
          echo "Testing Redis connection..."
          for i in $(seq 1 10); do
            if redis-cli -h sample-flask-datastore ping > /dev/null 2>&1; then
              echo "Redis is ready!"
              break
            fi
            echo "Waiting for Redis... (attempt $i/10)"
            sleep 2
          done