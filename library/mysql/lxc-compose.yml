# MySQL Server (Docker-style)
# Simple MySQL following official Docker patterns
# Usage: MYSQL_ROOT_PASSWORD=mysecret lxc-compose up

version: '1.0'

containers:
  mysql:
    image: ubuntu:22.04
    
    exposed_ports:
      - 3306
    
    packages:
      - mysql-server
      - mysql-client
    
    tests:
      external:
        - mysql:/tests/mysql.sh
    
    post_install:
      - name: "Setup MySQL"
        command: |
          # Start MySQL service
          service mysql start
          sleep 5
          
          # Set root password from environment
          MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-mysql}
          mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '$MYSQL_ROOT_PASSWORD';"
          
          # Allow remote connections
          mysql -p$MYSQL_ROOT_PASSWORD -e "CREATE USER 'root'@'%' IDENTIFIED BY '$MYSQL_ROOT_PASSWORD';"
          mysql -p$MYSQL_ROOT_PASSWORD -e "GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;"
          mysql -p$MYSQL_ROOT_PASSWORD -e "FLUSH PRIVILEGES;"
          
          # Create database if specified
          MYSQL_DATABASE=${MYSQL_DATABASE:-}
          if [ -n "$MYSQL_DATABASE" ]; then
            mysql -p$MYSQL_ROOT_PASSWORD -e "CREATE DATABASE IF NOT EXISTS $MYSQL_DATABASE;"
          fi
          
          # Create user if specified
          MYSQL_USER=${MYSQL_USER:-}
          MYSQL_PASSWORD=${MYSQL_PASSWORD:-}
          if [ -n "$MYSQL_USER" ] && [ -n "$MYSQL_PASSWORD" ]; then
            mysql -p$MYSQL_ROOT_PASSWORD -e "CREATE USER '$MYSQL_USER'@'%' IDENTIFIED BY '$MYSQL_PASSWORD';"
            if [ -n "$MYSQL_DATABASE" ]; then
              mysql -p$MYSQL_ROOT_PASSWORD -e "GRANT ALL ON $MYSQL_DATABASE.* TO '$MYSQL_USER'@'%';"
            fi
            mysql -p$MYSQL_ROOT_PASSWORD -e "FLUSH PRIVILEGES;"
          fi
          
          # Update bind address
          sed -i 's/bind-address.*/bind-address = 0.0.0.0/' /etc/mysql/mysql.conf.d/mysqld.cnf
          
          # Restart MySQL with new config
          service mysql restart
          echo "MySQL is ready!"