# Image Size Comparison - Same Python Web App in Different Base Images
# This demonstrates the size and setup differences between images

containers:
  # Alpine version (~3MB base + ~50MB for Python)
  - name: webapp-alpine
    image: alpine:3.19
    ip: 10.0.3.50
    ports:
      - "3000:3000"
    mounts:
      - source: ./app
        target: /app
    services:
      - name: python-app
        command: |
          # Total size after install: ~60MB
          apk add --no-cache python3 py3-pip
          cd /app
          pip3 install --no-cache-dir flask
          cat > app.py << 'EOF'
          from flask import Flask
          app = Flask(__name__)
          @app.route('/')
          def hello():
              return "Hello from Alpine (60MB total)!"
          if __name__ == '__main__':
              app.run(host='0.0.0.0', port=3000)
          EOF
          python3 app.py

  # Ubuntu Minimal version (~100MB base + ~50MB for Python)
  - name: webapp-ubuntu-minimal
    image: ubuntu-minimal:22.04
    ip: 10.0.3.51
    ports:
      - "3001:3000"
    mounts:
      - source: ./app
        target: /app
    services:
      - name: python-app
        command: |
          # Total size after install: ~150MB
          apt-get update && apt-get install -y python3 python3-pip
          cd /app
          pip3 install --break-system-packages flask
          cat > app.py << 'EOF'
          from flask import Flask
          app = Flask(__name__)
          @app.route('/')
          def hello():
              return "Hello from Ubuntu Minimal (150MB total)!"
          if __name__ == '__main__':
              app.run(host='0.0.0.0', port=3000)
          EOF
          python3 app.py

  # Ubuntu Full version (~400MB base + ~50MB for Python)
  - name: webapp-ubuntu-full
    image: ubuntu:22.04
    ip: 10.0.3.52
    ports:
      - "3002:3000"
    mounts:
      - source: ./app
        target: /app
    services:
      - name: python-app
        command: |
          # Total size after install: ~450MB
          apt-get update && apt-get install -y python3 python3-pip
          cd /app
          pip3 install flask
          cat > app.py << 'EOF'
          from flask import Flask
          app = Flask(__name__)
          @app.route('/')
          def hello():
              return "Hello from Ubuntu Full (450MB total)!"
          if __name__ == '__main__':
              app.run(host='0.0.0.0', port=3000)
          EOF
          python3 app.py

# After running 'lxc-compose up', you can compare:
# - Alpine app at: http://localhost:3000 (60MB container)
# - Ubuntu Minimal at: http://localhost:3001 (150MB container)  
# - Ubuntu Full at: http://localhost:3002 (450MB container)
#
# Use 'lxc list' to see actual container sizes
# Alpine boots fastest, uses least memory, but may have compatibility issues
# Ubuntu Minimal is a good balance
# Ubuntu Full has everything but is largest